fun i32 @main () {
init:
  bid: b0
  allocations:
block b0:
  %b0:i0:i32 = minus 1:i32
  %b0:i1:u8 = typecast %b0:i0:i32 to u8
  %b0:i2:i32 = minus 128:i32
  %b0:i3:u8 = typecast %b0:i2:i32 to u8
  %b0:i4:u8 = or %b0:i3:u8 %b0:i1:u8
  %b0:i5:u8 = and %b0:i3:u8 %b0:i1:u8
  %b0:i6:u8 = and %b0:i3:u8 127:u8
  %b0:i7:u8 = or %b0:i3:u8 127:u8
  %b0:i8:i32 = xor %b0:i0:i32 %b0:i0:i32
  %b0:i9:u8 = typecast %b0:i8:i32 to u8
  %b0:i10:i32 = xor %b0:i0:i32 0:i32
  %b0:i11:u8 = typecast %b0:i10:i32 to u8
  %b0:i12:i32 = typecast %b0:i4:u8 to i32
  %b0:i13:u1 = cmp eq %b0:i12:i32 255:i32
  br %b0:i13:u1, b13(), b15(0:u1)
block b1:
  %b1:i0:i32 = typecast %b0:i11:u8 to i32
  %b1:i1:u1 = cmp eq %b1:i0:i32 255:i32
  j b3(%b1:i1:u1)
block b3:
  %b3:p0:u1:t0
  %b3:i0:i32 = typecast %b3:p0:u1 to i32
  ret %b3:i0:i32
block b4:
  %b4:i0:i32 = typecast %b0:i9:u8 to i32
  %b4:i1:u1 = cmp eq %b4:i0:i32 0:i32
  j b6(%b4:i1:u1)
block b6:
  %b6:p0:u1:t1
  br %b6:p0:u1, b1(), b3(0:u1)
block b7:
  %b7:i0:i32 = typecast %b0:i7:u8 to i32
  %b7:i1:u1 = cmp eq %b7:i0:i32 255:i32
  j b9(%b7:i1:u1)
block b9:
  %b9:p0:u1:t2
  br %b9:p0:u1, b4(), b6(0:u1)
block b10:
  %b10:i0:i32 = typecast %b0:i6:u8 to i32
  %b10:i1:u1 = cmp eq %b10:i0:i32 0:i32
  j b12(%b10:i1:u1)
block b12:
  %b12:p0:u1:t3
  br %b12:p0:u1, b7(), b9(0:u1)
block b13:
  %b13:i0:i32 = typecast %b0:i5:u8 to i32
  %b13:i1:u1 = cmp eq %b13:i0:i32 128:i32
  j b15(%b13:i1:u1)
block b15:
  %b15:p0:u1:t4
  br %b15:p0:u1, b10(), b12(0:u1)
}