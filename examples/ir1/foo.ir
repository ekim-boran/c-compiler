
fun i32 @foo (i32, i32, i32) {
init:
  bid: b0
  allocations: 
    %l0:i32:x
    %l1:i32:y
    %l2:i32:z

block b0:
  %b0:p0:i32:x
  %b0:p1:i32:y
  %b0:p2:i32:z
  %b0:i0:unit = store %b0:p0:i32 %l0:i32*
  %b0:i1:unit = store %b0:p1:i32 %l1:i32*
  %b0:i2:unit = store %b0:p2:i32 %l2:i32*
  %b0:i3:i32 = load %l0:i32*
  %b0:i4:i32 = load %l1:i32*
  %b0:i5:u1 = cmp eq %b0:i3:i32 %b0:i4:i32
  br %b0:i5:u1, b1(), b2()

block b1:
  %b1:i0:i32 = load %l1:i32*
  ret %b1:i0:i32

block b2:
  %b2:i0:i32 = load %l2:i32*
  ret %b2:i0:i32
}

fun i32 @main () {
init:
  bid: b0
  allocations: 


block b0:
  %b0:i0:i32 = minus 1:i32
  %b0:i1:i32 = call @foo:[ret:i32 params:(i32, i32, i32)]*(0:i32, 1:i32, %b0:i0:i32)
  %b0:i2:i32 = minus 1:i32
  %b0:i3:u1 = cmp eq %b0:i1:i32 %b0:i2:i32
  %b0:i4:i32 = typecast %b0:i3:u1 to i32
  ret %b0:i4:i32
}
