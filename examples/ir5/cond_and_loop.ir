var i32 @nonce = 1
fun i32 @main () {
init:
  bid: b0
  allocations:
block b0:
  %b0:i0:i32 = load @nonce:i32*
  %b0:i1:i32 = mod %b0:i0:i32 100:i32
  j b8(0:i32, 2:i32)
block b8:
  %b8:p0:i32:i
  %b8:p1:i32:p
  %b8:i0:u1 = cmp lt %b8:p0:i32 %b0:i1:i32
  br %b8:i0:u1, b9(), b11()
block b9:
  %b9:i0:i32 = mod %b8:p0:i32 2:i32
  %b9:i1:u1 = cmp ne %b9:i0:i32 0:i32
  br %b9:i1:u1, b12(), b13()
block b11:
  ret %b8:p1:i32
block b12:
  %b12:i0:i32 = add %b8:p1:i32 5:i32
  j b14(%b12:i0:i32)
block b13:
  %b13:i0:i32 = add %b8:p1:i32 7:i32
  j b14(%b13:i0:i32)
block b14:
  %b14:p0:i32:p
  br %b9:i1:u1, b15(), b16()
block b15:
  %b15:i0:i32 = add %b8:p0:i32 2:i32
  j b17(%b15:i0:i32, %b15:i0:i32)
block b16:
  %b16:i0:i32 = add %b8:p0:i32 1:i32
  j b17(%b16:i0:i32, %b16:i0:i32)
block b17:
  %b17:p0:i32:i
  %b17:p1:i32:t2
  j b8(%b17:p0:i32, %b14:p0:i32)
}