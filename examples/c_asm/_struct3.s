    .globl foo
    .section .text
    .type foo @function
foo:
    addi sp,sp,-256
    sd ra,248(sp)
    sd s0,240(sp)
    addi s0,sp,256
.foo.0:
    mv a2,a0
    mv a5,a1
    addi a7,s0,-112
    mv a0,a7
    mv a1,a2
    li a2,96
    sd a3,-256(s0)
    sd a4,-248(s0)
    sd a5,-240(s0)
    call memcpy
    ld a3,-256(s0)
    ld a4,-248(s0)
    ld a5,-240(s0)
    addi a7,s0,-208
    mv a0,a7
    addi a7,s0,-112
    mv a1,a7
    li a2,96
    sd a4,-256(s0)
    sd a5,-248(s0)
    call memcpy
    ld a4,-256(s0)
    ld a5,-248(s0)
    addi a7,s0,-208
    addi a0,a7,0
    addi a0,a0,0
    li a6,10
    sd a6,0(a0)
    mv a0,a5
    addi a7,s0,-208
    mv a1,a7
    li a2,96
    call memcpy
    li a0,0
    ld s0,240(sp)
    ld ra,248(sp)
    addi sp,sp,256
    ret
    .globl main
    .section .text
    .type main @function
main:
    addi sp,sp,-336
    sd ra,328(sp)
    sd s0,320(sp)
    addi s0,sp,336
.main.0:
    addi a7,s0,-112
    addi a1,a7,0
    addi a4,a1,0
    li a6,1
    sd a6,0(a4)
    addi a4,a1,8
    li a6,2
    sd a6,0(a4)
    addi a4,a1,16
    li a6,3
    sd a6,0(a4)
    addi a1,a1,24
    li a6,4
    sd a6,0(a1)
    addi a7,s0,-112
    addi a1,a7,32
    addi a4,a1,0
    li a6,2
    sd a6,0(a4)
    addi a4,a1,8
    li a6,3
    sd a6,0(a4)
    addi a4,a1,16
    li a6,4
    sd a6,0(a4)
    addi a1,a1,24
    li a6,5
    sd a6,0(a1)
    addi a7,s0,-112
    addi a1,a7,64
    addi a4,a1,0
    li a6,3
    sd a6,0(a4)
    addi a4,a1,8
    li a6,4
    sd a6,0(a4)
    addi a4,a1,16
    li a6,5
    sd a6,0(a4)
    addi a1,a1,24
    li a6,6
    sd a6,0(a1)
    addi a7,s0,-112
    mv a0,a7
    addi a7,s0,-304
    mv a1,a7
    sd a3,-336(s0)
    sd a2,-328(s0)
    call foo
    ld a3,-336(s0)
    ld a2,-328(s0)
    addi a7,s0,-208
    mv a0,a7
    addi a7,s0,-304
    mv a1,a7
    li a2,96
    sd a3,-336(s0)
    call memcpy
    ld a3,-336(s0)
    addi a7,s0,-208
    addi a0,a7,0
    addi a0,a0,0
    ld a0,0(a0)
    li a6,10
    xor a0,a0,a6
    seqz a0,a0
    ld s0,320(sp)
    ld ra,328(sp)
    addi sp,sp,336
    ret
